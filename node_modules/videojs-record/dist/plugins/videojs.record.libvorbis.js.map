{"version":3,"sources":["webpack://VideojsRecord.[name]/webpack/universalModuleDefinition","webpack://VideojsRecord.[name]/webpack/bootstrap","webpack://VideojsRecord.[name]/./src/js/plugins/libvorbis-plugin.js"],"names":["RecordEngine","videojs","getComponent","LibVorbisEngine","stream","mediaType","debug","inputStream","options","audioBitsPerSecond","sampleRate","chunks","engine","VorbisMediaRecorder","ondataavailable","onData","bind","onstop","onRecordingAvailable","start","stop","err","event","push","data","blob","Blob","type","onStopRecording"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClFA;;;;;AAKA,IAAMA,eAAeC,QAAQC,YAAR,CAAqB,cAArB,CAArB;;AAEA;;;;;;;IAMMC,e;;;;;;;;;;;;AACF;;;8BAGMC,M,EAAQC,S,EAAWC,K,EAAO;AAC5B,iBAAKC,WAAL,GAAmBH,MAAnB;AACA,iBAAKC,SAAL,GAAiBA,SAAjB;AACA,iBAAKC,KAAL,GAAaA,KAAb;;AAEA;AACA,iBAAKE,OAAL,GAAe;AACXC,oCAAoB,KAAKC;AADd,aAAf;AAGH;;AAED;;;;;;gCAGQ;AACJ,iBAAKC,MAAL,GAAc,EAAd;AACA,iBAAKC,MAAL,GAAc,IAAIC,mBAAJ,CAAwB,KAAKN,WAA7B,EACV,KAAKC,OADK,CAAd;AAEA,iBAAKI,MAAL,CAAYE,eAAZ,GAA8B,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAA9B;AACA,iBAAKJ,MAAL,CAAYK,MAAZ,GAAqB,KAAKC,oBAAL,CAA0BF,IAA1B,CAA+B,IAA/B,CAArB;;AAEA,iBAAKJ,MAAL,CAAYO,KAAZ;AACH;;AAED;;;;;;+BAGO;AACH,gBAAI;AACA,qBAAKP,MAAL,CAAYQ,IAAZ;AACH,aAFD,CAEE,OAAOC,GAAP,EAAY;AACV;AACH;AACJ;;AAED;;;;;;+BAGOC,K,EAAO;AACV,iBAAKX,MAAL,CAAYY,IAAZ,CAAiBD,MAAME,IAAvB;AACH;;AAED;;;;;;+CAGuB;AACnB,gBAAIC,OAAO,IAAIC,IAAJ,CAAS,KAAKf,MAAd,EAAsB,EAACgB,MAAM,KAAKhB,MAAL,CAAY,CAAZ,EAAegB,IAAtB,EAAtB,CAAX;AACA,iBAAKhB,MAAL,GAAc,EAAd;AACA,iBAAKiB,eAAL,CAAqBH,IAArB;AACH;;;;EArDyBzB,Y;;AAwD9B;;;AACAC,QAAQE,eAAR,GAA0BA,eAA1B;;kBAEeA,e","file":"videojs.record.libvorbis.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"libvorbis\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"libvorbis\"] = factory();\n\telse\n\t\troot[\"VideojsRecord\"] = root[\"VideojsRecord\"] || {}, root[\"VideojsRecord\"][\"libvorbis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/plugins/libvorbis-plugin.js\");\n","/**\n * @file libvorbis-plugin.js\n * @since 1.1.0\n */\n\nconst RecordEngine = videojs.getComponent('RecordEngine');\n\n/**\n * Audio-only engine for the libvorbis.js library.\n *\n * @class\n * @augments videojs.RecordPlugin\n */\nclass LibVorbisEngine extends RecordEngine {\n    /**\n     * Setup recording engine.\n     */\n    setup(stream, mediaType, debug) {\n        this.inputStream = stream;\n        this.mediaType = mediaType;\n        this.debug = debug;\n\n        // setup libvorbis.js\n        this.options = {\n            audioBitsPerSecond: this.sampleRate\n        };\n    }\n\n    /**\n     * Start recording.\n     */\n    start() {\n        this.chunks = [];\n        this.engine = new VorbisMediaRecorder(this.inputStream,\n            this.options);\n        this.engine.ondataavailable = this.onData.bind(this);\n        this.engine.onstop = this.onRecordingAvailable.bind(this);\n\n        this.engine.start();\n    }\n\n    /**\n     * Stop recording.\n     */\n    stop() {\n        try {\n            this.engine.stop();\n        } catch (err) {\n            // ignore errors about invalid state\n        }\n    }\n\n    /**\n     * @private\n     */\n    onData(event) {\n        this.chunks.push(event.data);\n    }\n\n    /**\n     * @private\n     */\n    onRecordingAvailable() {\n        let blob = new Blob(this.chunks, {type: this.chunks[0].type});\n        this.chunks = [];\n        this.onStopRecording(blob);\n    }\n}\n\n// expose plugin\nvideojs.LibVorbisEngine = LibVorbisEngine;\n\nexport default LibVorbisEngine;\n"],"sourceRoot":""}